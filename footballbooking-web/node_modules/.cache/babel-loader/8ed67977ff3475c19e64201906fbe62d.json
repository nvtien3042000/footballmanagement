{"ast":null,"code":"import axios from \"axios\";\nimport axiosClient from \"./axiosClient\";\nimport axiosClientPost from \"./axiosClientPost\";\nimport queryString from 'query-string';\nconst pitchApi = {\n  getAll: params => {\n    const url = 'pitchservice/pitchs';\n    return axiosClient.get(url, {\n      params\n    });\n  },\n  get: id => {\n    const url = `pitchservice/pitch/${id}`;\n    return axiosClient.get(url);\n  },\n  getFreeTimeSlot: params => {\n    const url = 'bookingservice/getFreeTimeSlot';\n    return axiosClient.get(url, {\n      params: params\n    });\n  },\n  getMiniPitchById: id => {\n    const url = 'pitchservice/miniPitchByIdList';\n    return axiosClient.get(url, {\n      params: id\n    });\n  },\n  booking: params => {\n    var data = new FormData();\n    data.append(\"bookingDate\", params.bookingDate);\n    data.append(\"miniPitchId\", params.miniPitchId);\n    data.append(\"hourStart\", params.hourStart);\n    var config = {\n      url: \"/bookingservice/book\",\n      method: \"POST\",\n      data,\n      headers: {\n        \"Authorization\": localStorage.getItem(\"token\"),\n        ...data.getHeaders\n      }\n    };\n    return axiosClientPost(config);\n  },\n  bookingInfor: () => {\n    var data = new FormData();\n    var config = {\n      url: \"/bookingservice/getMyBooking\",\n      method: \"GET\",\n      data,\n      headers: {\n        \"Authorization\": localStorage.getItem(\"token\"),\n        ...data.getHeaders\n      }\n    };\n    return axiosClientPost(config);\n  },\n  cancelBooking: bookingId => {\n    var data = new FormData();\n    data.append(\"bookingId\", bookingId);\n    var config = {\n      url: \"/bookingservice/cancelBookingRequest\",\n      method: \"POST\",\n      data,\n      headers: {\n        \"Authorization\": localStorage.getItem(\"token\"),\n        ...data.getHeaders\n      }\n    };\n    return axiosClientPost(config);\n  }\n};\nexport default pitchApi;","map":{"version":3,"sources":["E:/DA/footballbooking/footballbooking-web/src/api/pitchApi.js"],"names":["axios","axiosClient","axiosClientPost","queryString","pitchApi","getAll","params","url","get","id","getFreeTimeSlot","getMiniPitchById","booking","data","FormData","append","bookingDate","miniPitchId","hourStart","config","method","headers","localStorage","getItem","getHeaders","bookingInfor","cancelBooking","bookingId"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,WAAP,MAAwB,cAAxB;AAGA,MAAMC,QAAQ,GAAG;AACbC,EAAAA,MAAM,EAAGC,MAAD,IAAY;AAChB,UAAMC,GAAG,GAAG,qBAAZ;AACA,WAAON,WAAW,CAACO,GAAZ,CAAgBD,GAAhB,EAAqB;AAAED,MAAAA;AAAF,KAArB,CAAP;AACH,GAJY;AAMbE,EAAAA,GAAG,EAAGC,EAAD,IAAQ;AACT,UAAMF,GAAG,GAAI,sBAAqBE,EAAG,EAArC;AACA,WAAOR,WAAW,CAACO,GAAZ,CAAgBD,GAAhB,CAAP;AACH,GATY;AAWbG,EAAAA,eAAe,EAAGJ,MAAD,IAAY;AACzB,UAAMC,GAAG,GAAG,gCAAZ;AACA,WAAON,WAAW,CAACO,GAAZ,CAAgBD,GAAhB,EAAqB;AAAED,MAAAA,MAAM,EAAEA;AAAV,KAArB,CAAP;AACH,GAdY;AAgBbK,EAAAA,gBAAgB,EAAGF,EAAD,IAAQ;AACtB,UAAMF,GAAG,GAAG,gCAAZ;AACA,WAAON,WAAW,CAACO,GAAZ,CAAgBD,GAAhB,EAAqB;AAAED,MAAAA,MAAM,EAAEG;AAAV,KAArB,CAAP;AACH,GAnBY;AAqBbG,EAAAA,OAAO,EAAGN,MAAD,IAAY;AACjB,QAAIO,IAAI,GAAG,IAAIC,QAAJ,EAAX;AACAD,IAAAA,IAAI,CAACE,MAAL,CAAY,aAAZ,EAA2BT,MAAM,CAACU,WAAlC;AACAH,IAAAA,IAAI,CAACE,MAAL,CAAY,aAAZ,EAA2BT,MAAM,CAACW,WAAlC;AACAJ,IAAAA,IAAI,CAACE,MAAL,CAAY,WAAZ,EAAyBT,MAAM,CAACY,SAAhC;AACA,QAAIC,MAAM,GAAG;AACTZ,MAAAA,GAAG,EAAE,sBADI;AAETa,MAAAA,MAAM,EAAE,MAFC;AAGTP,MAAAA,IAHS;AAITQ,MAAAA,OAAO,EAAE;AACL,yBAAiBC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADZ;AAEL,WAAGV,IAAI,CAACW;AAFH;AAJA,KAAb;AAUA,WAAOtB,eAAe,CAACiB,MAAD,CAAtB;AAEH,GAtCY;AAwCbM,EAAAA,YAAY,EAAE,MAAM;AAChB,QAAIZ,IAAI,GAAG,IAAIC,QAAJ,EAAX;AACA,QAAIK,MAAM,GAAG;AACTZ,MAAAA,GAAG,EAAE,8BADI;AAETa,MAAAA,MAAM,EAAE,KAFC;AAGTP,MAAAA,IAHS;AAITQ,MAAAA,OAAO,EAAE;AACL,yBAAiBC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADZ;AAEL,WAAGV,IAAI,CAACW;AAFH;AAJA,KAAb;AAUA,WAAOtB,eAAe,CAACiB,MAAD,CAAtB;AACH,GArDY;AAuDbO,EAAAA,aAAa,EAAGC,SAAD,IAAe;AAC1B,QAAId,IAAI,GAAG,IAAIC,QAAJ,EAAX;AACAD,IAAAA,IAAI,CAACE,MAAL,CAAY,WAAZ,EAAyBY,SAAzB;AACA,QAAIR,MAAM,GAAG;AACTZ,MAAAA,GAAG,EAAE,sCADI;AAETa,MAAAA,MAAM,EAAE,MAFC;AAGTP,MAAAA,IAHS;AAITQ,MAAAA,OAAO,EAAE;AACL,yBAAiBC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADZ;AAEL,WAAGV,IAAI,CAACW;AAFH;AAJA,KAAb;AAUA,WAAOtB,eAAe,CAACiB,MAAD,CAAtB;AACH;AArEY,CAAjB;AAwEA,eAAef,QAAf","sourcesContent":["import axios from \"axios\";\r\nimport axiosClient from \"./axiosClient\";\r\nimport axiosClientPost from \"./axiosClientPost\";\r\nimport queryString from 'query-string';\r\n\r\n\r\nconst pitchApi = {\r\n    getAll: (params) => {\r\n        const url = 'pitchservice/pitchs';\r\n        return axiosClient.get(url, { params });\r\n    },\r\n\r\n    get: (id) => {\r\n        const url = `pitchservice/pitch/${id}`;\r\n        return axiosClient.get(url);\r\n    },\r\n\r\n    getFreeTimeSlot: (params) => {\r\n        const url = 'bookingservice/getFreeTimeSlot';\r\n        return axiosClient.get(url, { params: params });\r\n    },\r\n\r\n    getMiniPitchById: (id) => {\r\n        const url = 'pitchservice/miniPitchByIdList';\r\n        return axiosClient.get(url, { params: id });\r\n    },\r\n\r\n    booking: (params) => {\r\n        var data = new FormData();\r\n        data.append(\"bookingDate\", params.bookingDate);\r\n        data.append(\"miniPitchId\", params.miniPitchId);\r\n        data.append(\"hourStart\", params.hourStart);\r\n        var config = {\r\n            url: \"/bookingservice/book\",\r\n            method: \"POST\",\r\n            data,\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem(\"token\"),\r\n                ...data.getHeaders,\r\n            },\r\n        };\r\n\r\n        return axiosClientPost(config)\r\n\r\n    },\r\n\r\n    bookingInfor: () => {\r\n        var data = new FormData();\r\n        var config = {\r\n            url: \"/bookingservice/getMyBooking\",\r\n            method: \"GET\",\r\n            data,\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem(\"token\"),\r\n                ...data.getHeaders,\r\n            },\r\n        };\r\n\r\n        return axiosClientPost(config)\r\n    },\r\n\r\n    cancelBooking: (bookingId) => {\r\n        var data = new FormData();\r\n        data.append(\"bookingId\", bookingId);\r\n        var config = {\r\n            url: \"/bookingservice/cancelBookingRequest\",\r\n            method: \"POST\",\r\n            data,\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem(\"token\"),\r\n                ...data.getHeaders,\r\n            },\r\n        };\r\n\r\n        return axiosClientPost(config)\r\n    }\r\n}\r\n\r\nexport default pitchApi; "]},"metadata":{},"sourceType":"module"}