{"ast":null,"code":"import axios from 'axios';\nimport queryString from 'query-string'; // Set up default config for http requests here\n// Please have a look at here `https://github.com/axios/axios#request- config` for the full list of configs\n\nconst axiosClientPost = axios.create({\n  baseURL: 'http://localhost:8080',\n  headers: {\n    'content-type': 'application/x-www-form-urlencoded'\n  },\n  // paramsSerializer: params => params\n  paramsSerializer: params => queryString.stringify(params)\n});\naxiosClientPost.interceptors.request.use(async config => {\n  // Handle token here ...\n  return config;\n});\naxiosClientPost.interceptors.response.use(response => {\n  if (response && response.data) {\n    return response.data;\n  }\n\n  return response;\n}, error => {\n  // Handle errors\n  throw error;\n});\nexport default axiosClientPost; // import axios from \"axios\";\n// import queryString from 'query-string';\n// const axiosClientPost = axios.create({\n//     baseURL: \"http://localhost:8080/\",\n//     headers: {\n//         'content-type': 'application/x-www-form-urlencoded'\n//     },\n//     paramsSerializer: params => queryString.stringify(params)\n// });\n// axiosClientPost.interceptors.response.use((response) => {\n//     return response;\n// }, (error) => {\n//     // Handle errors\n//     throw error;\n// });\n// export default axiosClientPost;","map":{"version":3,"sources":["E:/DA/footballbooking/footballbooking-web/src/api/axiosClientPost.js"],"names":["axios","queryString","axiosClientPost","create","baseURL","headers","paramsSerializer","params","stringify","interceptors","request","use","config","response","data","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,cAAxB,C,CAEA;AACA;;AACA,MAAMC,eAAe,GAAGF,KAAK,CAACG,MAAN,CAAa;AACjCC,EAAAA,OAAO,EAAE,uBADwB;AAEjCC,EAAAA,OAAO,EAAE;AACL,oBAAgB;AADX,GAFwB;AAKjC;AACAC,EAAAA,gBAAgB,EAAEC,MAAM,IAAIN,WAAW,CAACO,SAAZ,CAAsBD,MAAtB;AANK,CAAb,CAAxB;AASAL,eAAe,CAACO,YAAhB,CAA6BC,OAA7B,CAAqCC,GAArC,CAAyC,MAAOC,MAAP,IAAkB;AACvD;AACA,SAAOA,MAAP;AACH,CAHD;AAKAV,eAAe,CAACO,YAAhB,CAA6BI,QAA7B,CAAsCF,GAAtC,CAA2CE,QAAD,IAAc;AACpD,MAAIA,QAAQ,IAAIA,QAAQ,CAACC,IAAzB,EAA+B;AAC3B,WAAOD,QAAQ,CAACC,IAAhB;AACH;;AAED,SAAOD,QAAP;AACH,CAND,EAMIE,KAAD,IAAW;AACV;AACA,QAAMA,KAAN;AACH,CATD;AAWA,eAAeb,eAAf,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import axios from 'axios';\r\nimport queryString from 'query-string';\r\n\r\n// Set up default config for http requests here\r\n// Please have a look at here `https://github.com/axios/axios#request- config` for the full list of configs\r\nconst axiosClientPost = axios.create({\r\n    baseURL: 'http://localhost:8080',\r\n    headers: {\r\n        'content-type': 'application/x-www-form-urlencoded'\r\n    },\r\n    // paramsSerializer: params => params\r\n    paramsSerializer: params => queryString.stringify(params),\r\n});\r\n\r\naxiosClientPost.interceptors.request.use(async (config) => {\r\n    // Handle token here ...\r\n    return config;\r\n});\r\n\r\naxiosClientPost.interceptors.response.use((response) => {\r\n    if (response && response.data) {\r\n        return response.data;\r\n    }\r\n\r\n    return response;\r\n}, (error) => {\r\n    // Handle errors\r\n    throw error;\r\n});\r\n\r\nexport default axiosClientPost;\r\n\r\n// import axios from \"axios\";\r\n// import queryString from 'query-string';\r\n\r\n// const axiosClientPost = axios.create({\r\n//     baseURL: \"http://localhost:8080/\",\r\n//     headers: {\r\n//         'content-type': 'application/x-www-form-urlencoded'\r\n//     },\r\n\r\n//     paramsSerializer: params => queryString.stringify(params)\r\n// });\r\n\r\n// axiosClientPost.interceptors.response.use((response) => {\r\n\r\n//     return response;\r\n// }, (error) => {\r\n//     // Handle errors\r\n//     throw error;\r\n// });\r\n\r\n// export default axiosClientPost;"]},"metadata":{},"sourceType":"module"}