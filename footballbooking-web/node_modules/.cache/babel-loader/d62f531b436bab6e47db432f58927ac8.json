{"ast":null,"code":"import axios from \"axios\";\nimport axiosClient from \"./axiosClient\";\nimport axiosClientPost from \"./axiosClientPost\";\nimport queryString from 'query-string';\nconst adminApi = {\n  getListUsers: filter => {\n    var data = new FormData();\n    data.append(\"searchByNameOrPhone\", filter.searchByNameOrPhone);\n    data.append(\"limit\", filter.limit);\n    data.append(\"roleId\", filter.roleId);\n    data.append(\"page\", filter.page);\n    console.log(\"FILTER\");\n    console.log(filter);\n    var config = {\n      url: \"/userservice/getAllUser\",\n      method: \"POST\",\n      headers: {\n        \"Authorization\": localStorage.getItem(\"token\"),\n        ...data.getHeaders\n      },\n      data\n    };\n    return axiosClientPost(config);\n  },\n  updateStatusAccount: userId => {\n    console.log(\"userId:\", userId);\n    var data = new FormData();\n    data.append(\"userId\", userId);\n    var config = {\n      url: \"/userservice/toggleStatus\",\n      method: \"POST\",\n      data,\n      headers: {\n        \"Authorization\": localStorage.getItem(\"token\"),\n        ...data.getHeaders\n      }\n    };\n    return axiosClientPost(config);\n  },\n  addOwner: owner => {\n    console.log(\"userId:\", owner);\n    var data = new FormData();\n    data.append(\"fullname\", owner.fullname);\n    data.append(\"phone\", owner.phone);\n    data.append(\"password\", owner.password);\n    data.append(\"email\", owner.email);\n    var config = {\n      url: \"/userservice/addNewPitchOwner\",\n      method: \"POST\",\n      data,\n      headers: {\n        \"Authorization\": localStorage.getItem(\"token\"),\n        ...data.getHeaders\n      }\n    };\n    return axiosClientPost(config);\n  }\n};\nexport default adminApi;","map":{"version":3,"sources":["E:/DA/footballbooking/footballbooking-web/src/api/adminApi.js"],"names":["axios","axiosClient","axiosClientPost","queryString","adminApi","getListUsers","filter","data","FormData","append","searchByNameOrPhone","limit","roleId","page","console","log","config","url","method","headers","localStorage","getItem","getHeaders","updateStatusAccount","userId","addOwner","owner","fullname","phone","password","email"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,WAAP,MAAwB,cAAxB;AAGA,MAAMC,QAAQ,GAAG;AACbC,EAAAA,YAAY,EAAGC,MAAD,IAAY;AACtB,QAAIC,IAAI,GAAG,IAAIC,QAAJ,EAAX;AACAD,IAAAA,IAAI,CAACE,MAAL,CAAY,qBAAZ,EAAmCH,MAAM,CAACI,mBAA1C;AACAH,IAAAA,IAAI,CAACE,MAAL,CAAY,OAAZ,EAAqBH,MAAM,CAACK,KAA5B;AACAJ,IAAAA,IAAI,CAACE,MAAL,CAAY,QAAZ,EAAsBH,MAAM,CAACM,MAA7B;AACAL,IAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoBH,MAAM,CAACO,IAA3B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ;AACA,QAAIU,MAAM,GAAG;AACTC,MAAAA,GAAG,EAAE,yBADI;AAETC,MAAAA,MAAM,EAAE,MAFC;AAITC,MAAAA,OAAO,EAAE;AACL,yBAAiBC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADZ;AAEL,WAAGd,IAAI,CAACe;AAFH,OAJA;AAQTf,MAAAA;AARS,KAAb;AAWA,WAAOL,eAAe,CAACc,MAAD,CAAtB;AACH,GArBY;AAsBbO,EAAAA,mBAAmB,EAAGC,MAAD,IAAY;AAC7BV,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBS,MAAvB;AACA,QAAIjB,IAAI,GAAG,IAAIC,QAAJ,EAAX;AACAD,IAAAA,IAAI,CAACE,MAAL,CAAY,QAAZ,EAAsBe,MAAtB;AACA,QAAIR,MAAM,GAAG;AACTC,MAAAA,GAAG,EAAE,2BADI;AAETC,MAAAA,MAAM,EAAE,MAFC;AAGTX,MAAAA,IAHS;AAITY,MAAAA,OAAO,EAAE;AACL,yBAAiBC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADZ;AAEL,WAAGd,IAAI,CAACe;AAFH;AAJA,KAAb;AAUA,WAAOpB,eAAe,CAACc,MAAD,CAAtB;AACH,GArCY;AAuCbS,EAAAA,QAAQ,EAAGC,KAAD,IAAW;AACjBZ,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBW,KAAvB;AACA,QAAInB,IAAI,GAAG,IAAIC,QAAJ,EAAX;AACAD,IAAAA,IAAI,CAACE,MAAL,CAAY,UAAZ,EAAwBiB,KAAK,CAACC,QAA9B;AACApB,IAAAA,IAAI,CAACE,MAAL,CAAY,OAAZ,EAAqBiB,KAAK,CAACE,KAA3B;AACArB,IAAAA,IAAI,CAACE,MAAL,CAAY,UAAZ,EAAwBiB,KAAK,CAACG,QAA9B;AACAtB,IAAAA,IAAI,CAACE,MAAL,CAAY,OAAZ,EAAqBiB,KAAK,CAACI,KAA3B;AACA,QAAId,MAAM,GAAG;AACTC,MAAAA,GAAG,EAAE,+BADI;AAETC,MAAAA,MAAM,EAAE,MAFC;AAGTX,MAAAA,IAHS;AAITY,MAAAA,OAAO,EAAE;AACL,yBAAiBC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADZ;AAEL,WAAGd,IAAI,CAACe;AAFH;AAJA,KAAb;AAUA,WAAOpB,eAAe,CAACc,MAAD,CAAtB;AACH;AAzDY,CAAjB;AA4DA,eAAeZ,QAAf","sourcesContent":["import axios from \"axios\";\r\nimport axiosClient from \"./axiosClient\";\r\nimport axiosClientPost from \"./axiosClientPost\";\r\nimport queryString from 'query-string';\r\n\r\n\r\nconst adminApi = {\r\n    getListUsers: (filter) => {\r\n        var data = new FormData();\r\n        data.append(\"searchByNameOrPhone\", filter.searchByNameOrPhone);\r\n        data.append(\"limit\", filter.limit);\r\n        data.append(\"roleId\", filter.roleId);\r\n        data.append(\"page\", filter.page);\r\n        console.log(\"FILTER\")\r\n        console.log(filter)\r\n        var config = {\r\n            url: \"/userservice/getAllUser\",\r\n            method: \"POST\",\r\n\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem(\"token\"),\r\n                ...data.getHeaders,\r\n            },\r\n            data,\r\n        };\r\n\r\n        return axiosClientPost(config)\r\n    },\r\n    updateStatusAccount: (userId) => {\r\n        console.log(\"userId:\", userId)\r\n        var data = new FormData();\r\n        data.append(\"userId\", userId);\r\n        var config = {\r\n            url: \"/userservice/toggleStatus\",\r\n            method: \"POST\",\r\n            data,\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem(\"token\"),\r\n                ...data.getHeaders,\r\n            },\r\n        };\r\n\r\n        return axiosClientPost(config)\r\n    },\r\n\r\n    addOwner: (owner) => {\r\n        console.log(\"userId:\", owner)\r\n        var data = new FormData();\r\n        data.append(\"fullname\", owner.fullname);\r\n        data.append(\"phone\", owner.phone);\r\n        data.append(\"password\", owner.password);\r\n        data.append(\"email\", owner.email);\r\n        var config = {\r\n            url: \"/userservice/addNewPitchOwner\",\r\n            method: \"POST\",\r\n            data,\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem(\"token\"),\r\n                ...data.getHeaders,\r\n            },\r\n        };\r\n\r\n        return axiosClientPost(config)\r\n    }\r\n}\r\n\r\nexport default adminApi"]},"metadata":{},"sourceType":"module"}